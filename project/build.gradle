plugins {
    id 'java'
    id 'application'
    id 'pmd' // and/or checkstyle, jacoco, spotbugs
    id 'edu.odu.cs.report_accumulator' version '1.4'
    id 'java-gradle-plugin'
    id 'ivy-publish'
}

java {
    sourceCompatibility = JavaVersion.toVersion(11)
    targetCompatibility = JavaVersion.toVersion(11)
}

application {
    mainClass = 'edu.odu.cs.cs350.pne.Main'
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.hamcrest:hamcrest-library:2.2'
    // https://mvnrepository.com/artifact/commons-io/commons-io
    implementation('commons-io:commons-io:2.4')
    // https://mvnrepository.com/artifact/org.apache.commons/commons-csv
    implementation 'org.apache.commons:commons-csv:1.10.0'
    implementation 'org.apache.poi:poi:5.1.0'
    implementation 'org.apache.poi:poi-ooxml:5.1.0'

}

gradlePlugin {
    plugins {
        reportAccumulatorPlugin {
            id = 'edu.odu.cs.report_accumulator'
            implementationClass = 'edu.odu.cs.zeil.report_accumulator.ReportAccumulatorPlugin'
        }
    }
}

group = 'edu.odu.cs.zeil'
version = '1.4'
// Credentials are loaded from ~/.gradle/gradle.properties
if(project.hasProperty("ivyRepoUser")){
	ext.ivyRepoUser = "$ivyRepoUser";
} else {
	ext.ivyRepoUser = "user";
}
if(project.hasProperty("ivyRepoPass")){
	ext.ivyRepoPass = "$ivyRepoPass";
} else {
	ext.ivyRepoPass = "password";
}

pmd {
    ignoreFailures = true
    consoleOutput = false
}

test {
    ignoreFailures = true
    useJUnitPlatform()
}

task copyDocs(type: Copy){
    dependsOn 'javadoc'
    into 'build/reports'
    from 'build/docs'
}

project.tasks.check.dependsOn(copyDocs)

task reports(type: Copy){
    dependsOn 'check'
    from 'src/main/html/'
    into 'build/reports'
    
}

task gstatus (type: Exec) {
    workingDir = ','
    commandLine = ['git', 'status']
}


def pagesDir = file("${project.rootDir}/../website-temp/").absolutePath

task clearPages(type: Delete) {
    delete pagesDir
}

task workTree(dependsOn: ['clearPages']) { 
    doLast {
        exec {
            workingDir = '.'
            commandLine = ['git', 'worktree', 'add', '-f', pagesDir, 'gh-pages']
        }
        exec {
            workingDir = pagesDir
            commandLine = ['git', 'checkout', 'gh-pages']
        }
        exec {
            workingDir = pagesDir
            commandLine = ['git', 'pull']
        }
    }
}

task copyReports (type: Copy, dependsOn: ['reports', 'workTree']) {
    from 'build/reports/'
    into pagesDir
}

task copyWebsite (dependsOn: ['copyReports']) {
}

task commitWebsite (dependsOn: 'copyWebsite') {
    doLast {
        Date now = new Date()

        exec {
            workingDir = pagesDir
            commandLine = ['git', 'add', pagesDir]
            ignoreExitValue = true
        }
        exec {
            workingDir = pagesDir
            commandLine = ['git', 'commit', '-m', 'Updating webpages at ' + now.toString()]
            ignoreExitValue = true
        }
    }
}

task pushWebsite (type: Exec, dependsOn: 'commitWebsite') {
    workingDir = pagesDir
    commandLine = ['git', 'push']
    ignoreExitValue = true
}

reportStats {
    reportsURL = 'https://kylepait.github.io/CS350-Group-Project/'
    htmlSourceDir = file('src/main/html')  // default value
    reportsDir = file('build/reports') // default value
    
}

task deployReports (type: Delete, dependsOn: 'pushWebsite', 'reportStats') {
    group = "Reporting"
    description  'Commit and push website changes to GitHub'
    delete pagesDir
}

publishing {
    publications {
        ivyJava(IvyPublication) {
            organisation 'edu.odu.cs.zeil'
            module project.name
            revision '1.4'
            descriptor.status = 'milestone'
            descriptor.branch = 'master'

            from components.java
        }
    }
    repositories {
        
		ivy {
            name 'ivyRepo'
            url 'sftp://linux.cs.odu.edu:22/home/zeil/secure_html/ivyrepo'
            // Readable via https://www.cs.odu.edu/~zeil/ivyrepo    
            credentials {
                // Credentials are loaded from ~/.gradle/gradle.properties
                username project.ivyRepoUser
                password project.ivyRepoPass
            }
        }
    }           
}

